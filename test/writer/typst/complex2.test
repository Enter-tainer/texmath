<<< native
[ EArray
    [ AlignCenter , AlignCenter ]
    [ [ [ EText TextNormal "Quadratic Equation" ]
      , [ EGrouped
            [ EIdentifier "x"
            , ESymbol Rel "="
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESymbol Bin "-"
                   , EIdentifier "b"
                   , ESymbol Bin "\177"
                   , ESqrt
                       (EGrouped
                          [ ESubsup (EIdentifier "b") (EGrouped []) (ENumber "2")
                          , ESymbol Bin "-"
                          , ENumber "4"
                          , EIdentifier "a"
                          , EIdentifier "c"
                          ])
                   ])
                (EGrouped [ ENumber "2" , EIdentifier "a" ])
            ]
        ]
      ]
    , [ [ EText TextNormal "DisplayQuadratic Equation" ]
      , [ EGrouped
            [ EIdentifier "x"
            , ESymbol Rel "="
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESymbol Bin "-"
                   , EIdentifier "b"
                   , ESymbol Bin "\177"
                   , ESqrt
                       (EGrouped
                          [ ESubsup (EIdentifier "b") (EGrouped []) (ENumber "2")
                          , ESymbol Bin "-"
                          , ENumber "4"
                          , EIdentifier "a"
                          , EIdentifier "c"
                          ])
                   ])
                (EGrouped [ ENumber "2" , EIdentifier "a" ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Rational Function" ]
      , [ EGrouped
            [ EIdentifier "f"
            , ESymbol Open "("
            , EIdentifier "x"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , EFraction
                NormalFrac
                (EGrouped
                   [ ENumber "1"
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "2")
                   ])
                (EGrouped
                   [ ENumber "1"
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "3")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Rational Function" ]
      , [ EGrouped
            [ EIdentifier "f"
            , ESymbol Open "("
            , EIdentifier "x"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESymbol Open "("
                   , ENumber "1"
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "2")
                   , ESymbol Close ")"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "3")
                   ])
                (EGrouped
                   [ ENumber "1"
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "3")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Rational Function" ]
      , [ EGrouped
            [ EIdentifier "f"
            , ESymbol Open "("
            , EIdentifier "x"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESymbol Open "("
                   , ENumber "1"
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "2")
                   , ESymbol Close ")"
                   , ESymbol Open "("
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "3")
                   , ESymbol Bin "-"
                   , ENumber "5"
                   , EIdentifier "x"
                   , ESymbol Close ")"
                   ])
                (EGrouped
                   [ ENumber "1"
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "3")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Parametrize Rational Function" ]
      , [ EGrouped
            [ EIdentifier "f"
            , ESymbol Open "("
            , EIdentifier "x"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESymbol Open "("
                   , ESubsup (EIdentifier "a") (EIdentifier "i") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "2")
                   , ESubsup (ESymbol Close ")") (EGrouped []) (ENumber "5")
                   ])
                (EGrouped
                   [ ENumber "1"
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "3")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Stacked exponents" ]
      , [ EGrouped
            [ EIdentifier "g"
            , ESymbol Open "("
            , EIdentifier "z"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , ESubsup
                (EIdentifier "e")
                (EGrouped [])
                (EGrouped
                   [ ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (EGrouped []) (ENumber "2")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Stacked exponents" ]
      , [ EGrouped
            [ EIdentifier "g"
            , ESymbol Open "("
            , EIdentifier "z"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , ESubsup
                (EIdentifier "e")
                (EGrouped [])
                (EGrouped
                   [ ESymbol Bin "-"
                   , ESymbol Open "("
                   , EIdentifier "z"
                   , ESymbol Bin "-"
                   , EIdentifier "a"
                   , ESubsup (ESymbol Close ")") (EGrouped []) (ENumber "2")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Stacked exponents" ]
      , [ EGrouped
            [ EIdentifier "g"
            , ESymbol Open "("
            , EIdentifier "z"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , ESubsup
                (EIdentifier "e")
                (EGrouped [])
                (EGrouped
                   [ ESymbol Bin "-"
                   , EUnderover
                       False
                       (ESymbol Op "\8721")
                       (EGrouped [ EIdentifier "i" , ESymbol Rel "=" , ENumber "0" ])
                       (EIdentifier "\8734")
                   , ESubsup (EIdentifier "z") (EIdentifier "i") (ENumber "2")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Stacked exponents" ]
      , [ EGrouped
            [ EIdentifier "g"
            , ESymbol Open "("
            , EIdentifier "y"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , ESubsup
                (EIdentifier "e")
                (EGrouped [])
                (EGrouped
                   [ ESymbol Bin "-"
                   , EUnderover
                       False
                       (ESymbol Op "\8721")
                       (EGrouped [ EIdentifier "i" , ESymbol Rel "=" , ENumber "0" ])
                       (EIdentifier "\8734")
                   , ESubsup (EIdentifier "y") (EIdentifier "i") (ENumber "2")
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Stacked exponents" ]
      , [ EGrouped
            [ EIdentifier "g"
            , ESymbol Open "("
            , EIdentifier "z"
            , ESymbol Close ")"
            , ESymbol Rel "="
            , ESubsup
                (EIdentifier "e")
                (EGrouped [])
                (EGrouped
                   [ ESymbol Bin "-"
                   , EUnderover
                       False
                       (ESymbol Op "\8721")
                       (EGrouped [ EIdentifier "i" , ESymbol Rel "=" , ENumber "0" ])
                       (EIdentifier "\8734")
                   , ESubsup
                       (EIdentifier "z")
                       (EGrouped [])
                       (EFraction
                          NormalFrac
                          (ENumber "2")
                          (EGrouped [ EIdentifier "a" , ESymbol Bin "-" , EIdentifier "i" ]))
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Cross Product" ]
      , [ EGrouped
            [ EFraction
                NormalFrac
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
                   ])
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
                   ])
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
                   ])
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
                   ])
            ]
        ]
      ]
    , [ [ EText TextNormal "Cross Product" ]
      , [ EGrouped
            [ ESymbol Open "("
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
                   ])
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
                   ])
            , ESymbol Close ")"
            , ESymbol Open "("
            , EFraction
                NormalFrac
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
                   ])
                (EGrouped
                   [ ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
                   , ESymbol Bin "-"
                   , ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
                   ])
            , ESymbol Close ")"
            ]
        ]
      ]
    , [ [ EText TextNormal "Cross Product" ]
      , [ EGrouped
            [ EDelimited
                "("
                ")"
                [ Right
                    (EFraction
                       NormalFrac
                       (EGrouped
                          [ ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
                          , ESymbol Bin "-"
                          , ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
                          ])
                       (EGrouped
                          [ ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
                          , ESymbol Bin "-"
                          , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
                          ]))
                ]
            , EDelimited
                "("
                ")"
                [ Right
                    (EFraction
                       NormalFrac
                       (EGrouped
                          [ ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
                          , ESymbol Bin "-"
                          , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
                          ])
                       (EGrouped
                          [ ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
                          , ESymbol Bin "-"
                          , ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
                          ]))
                ]
            ]
        ]
      ]
    , [ [ EText TextNormal "Cross Product" ]
      , [ EFraction
            NormalFrac
            (EGrouped
               [ ESymbol Open "("
               , ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
               , ESymbol Bin "-"
               , ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
               , ESymbol Close ")"
               , ESymbol Open "("
               , ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
               , ESymbol Bin "-"
               , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
               , ESymbol Close ")"
               ])
            (EGrouped
               [ ESymbol Open "("
               , ESubsup (EIdentifier "x") (ENumber "1") (EGrouped [])
               , ESymbol Bin "-"
               , ESubsup (EIdentifier "x") (ENumber "4") (EGrouped [])
               , ESymbol Close ")"
               , ESymbol Open "("
               , ESubsup (EIdentifier "x") (ENumber "2") (EGrouped [])
               , ESymbol Bin "-"
               , ESubsup (EIdentifier "x") (ENumber "3") (EGrouped [])
               , ESymbol Close ")"
               ])
        ]
      ]
    ]
]
>>> typst
upright("Quadratic Equation") & x eq frac(hyph.minus b plus.minus sqrt(b_()^2 hyph.minus 4 a c), 2 a)\
upright("DisplayQuadratic Equation") & x eq frac(hyph.minus b plus.minus sqrt(b_()^2 hyph.minus 4 a c), 2 a)\
upright("Rational Function") & f paren.l x paren.r eq frac(1 hyph.minus x_()^2, 1 hyph.minus x_()^3)\
upright("Rational Function") & f paren.l x paren.r eq frac(paren.l 1 hyph.minus x_()^2 paren.r x_()^3, 1 hyph.minus x_()^3)\
upright("Rational Function") & f paren.l x paren.r eq frac(paren.l 1 hyph.minus x_()^2 paren.r paren.l x_()^3 hyph.minus 5 x paren.r, 1 hyph.minus x_()^3)\
upright("Parametrize Rational Function") & f paren.l x paren.r eq frac(paren.l a_i^() hyph.minus x_()^2 paren.r_()^5, 1 hyph.minus x_()^3)\
upright("Stacked exponents") & g paren.l z paren.r eq e_()^(hyph.minus x_()^2)\
upright("Stacked exponents") & g paren.l z paren.r eq e_()^(hyph.minus paren.l z hyph.minus a paren.r_()^2)\
upright("Stacked exponents") & g paren.l z paren.r eq e_()^(hyph.minus sum_(i eq 0)^oo z_i^2)\
upright("Stacked exponents") & g paren.l y paren.r eq e_()^(hyph.minus sum_(i eq 0)^oo y_i^2)\
upright("Stacked exponents") & g paren.l z paren.r eq e_()^(hyph.minus sum_(i eq 0)^oo z_()^(frac(2, a hyph.minus i)))\
upright("Cross Product") & frac(x_1^() hyph.minus x_2^(), x_3^() hyph.minus x_4^()) frac(x_1^() hyph.minus x_4^(), x_2^() hyph.minus x_3^())\
upright("Cross Product") & paren.l frac(x_1^() hyph.minus x_2^(), x_3^() hyph.minus x_4^()) paren.r paren.l frac(x_1^() hyph.minus x_4^(), x_2^() hyph.minus x_3^()) paren.r\
upright("Cross Product") & lr((frac(x_1^() hyph.minus x_2^(), x_3^() hyph.minus x_4^()))) lr((frac(x_1^() hyph.minus x_4^(), x_2^() hyph.minus x_3^())))\
upright("Cross Product") & frac(paren.l x_1^() hyph.minus x_2^() paren.r paren.l x_3^() hyph.minus x_4^() paren.r, paren.l x_1^() hyph.minus x_4^() paren.r paren.l x_2^() hyph.minus x_3^() paren.r)
